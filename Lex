/*Count No. of lines*/

%{
int line_count = 0;
%}

%%
\n     { line_count++; }
.      ;
%%

int main() {
    yylex();
    printf("Number of lines: %d\n", line_count);
    return 0;
}


/* Write a LEX program to count and identify upper-case and lower-case letter */

%option noyywrap
%{
    #include <stdio.h>
    int lowercase = 0;  
    int uppercase = 0;  
%}

%%
[a-z]   { lowercase++; }   
[A-Z]   { uppercase++; }   

"\n"    { printf("Lower case letters: %d and Upper case is %d\n", lowercase, uppercase); } 
%%

int main(){
    printf("Enter the Word: ");
    yylex();  
    return 0;
}

/* Write a LEX program to count and identify Vowels and consonants */

%option noyywrap
%{
    #include <stdio.h>
    int vowel = 0;  
    int consonent = 0;  
%}

%%
[AEIOUaeiou]   { vowel++; }   
[BCDFGHJKLMNPQRSTVWXYZbcdfghjklmnpqrstvwxyz]   { consonent++; }   
"\n"    { printf(" vowels counts is : %d and Consonent count is %d\n", vowel, consonent); } 
%%

int main(){
    printf("Enter the Word: ");
    yylex();  // Start the lexical analysis
    return 0;
}

/* Write a LEX program to count and identify tokens */

%option noyywrap
%{
#include <stdio.h>

int keyword_count = 0, identifier_count = 0, number_count = 0;
int operator_count = 0, punctuation_count = 0;
%}

keyword     "if"|"else"|"while"|"return"|"int"|"float"|"char"|"void"
identifier  [a-zA-Z_][a-zA-Z0-9_]*
number      [0-9]+|[0-9]*"."[0-9]+
operator    [+\-*/=<>!&|]
punctuation [(){};,.]

%%
{keyword} {
    keyword_count++;
    printf("\nKeyword: %s\n", yytext);
    fflush(stdout);
}

{identifier} {
    identifier_count++;
    printf("Identifier: %s\n", yytext);
    fflush(stdout);
}

{number} {
    number_count++;
    printf("Number: %s\n", yytext);
    fflush(stdout);
}

{operator} {
    operator_count++;
    printf("Operator: %s\n", yytext);
    fflush(stdout);
}

{punctuation} {
    punctuation_count++;
    printf("Punctuation: %s\n", yytext);
    fflush(stdout);
}

"\n" {
    printf("\nTotal Keywords: %d\n", keyword_count);
    printf("Total Identifiers: %d\n", identifier_count);
    printf("Total Numbers: %d\n", number_count);
    printf("Total Operators: %d\n", operator_count);
    printf("Total Punctuations: %d\n", punctuation_count);
    fflush(stdout);
}
%%

int main() {
    printf("Give your input: \n");
    fflush(stdout);
    yylex();
    return 0;
}

